
val framebuff = #7FF0;

proc main() is
  var i;
  var s;
  var h;
  var a;
  var p;
  var y;
  var b;
  var i;
  var r;
  var t;
  var clear;
  var d;
  var ex;
{
  ex := [ #b0000000000000000
      , #b0000000110000000
      , #b0000000110000000
      , #b0000000110000000
      , #b0000000110000000
      , #b0000000110000000
      , #b0000000110000000
      , #b0000000110000000
      , #b0000000110000000
      , #b0000000110000000
      , #b0000000110000000
      , #b0000000110000000
      , #b0000000000000000
      , #b0000000110000000
      , #b0000000110000000
      , #b0000000000000000
      ];
  s := [ #b0000001111000000
       , #b0000111111110000
       , #b0001111111111000
       , #b0011111111111100
       , #b0111001111001110
       , #b0111001111001110
       , #b1111111111111111
       , #b1111111111111111
       , #b1111111111111111
       , #b1111111111111111
       , #b1111111111111111
       , #b0111011111101110
       , #b0011100110011100
       , #b0001111001111000
       , #b0000111111110000
       , #b0000001111000000
       ];
  h := [ #b0000000000000000
        , #b0111000000001110
        , #b0111000000001110
        , #b0111000000001110
        , #b0111000000001110
        , #b0111000000001110
        , #b0111000000001110
        , #b0111111111111110
        , #b0111111111111110
        , #b0111000000001110
        , #b0111000000001110
        , #b0111000000001110
        , #b0111000000001110
        , #b0111000000001110
        , #b0111000000001110
        , #b0000000000000000
        ];
  a := [ #b0000000000000000
       , #b0000000110000000
       , #b0000000110000000
       , #b0000001111000000
       , #b0000001111000000
       , #b0000011001100000
       , #b0000011001100000
       , #b0000110000110000
       , #b0000110000110000
       , #b0001111111111000
       , #b0001111111111000
       , #b0011000000001100
       , #b0011000000001100
       , #b0110000000000110
       , #b0110000000000110
       , #b0000000000000000
       ];
p := [ #b0000000000000000
     , #b0111111111000000
     , #b0110000000110000
     , #b0110000000011000
     , #b0110000000001100
     , #b0110000000000110
     , #b0110000000001100
     , #b0110000000011000
     , #b0111111111100000
     , #b0110000000000000
     , #b0110000000000000
     , #b0110000000000000
     , #b0110000000000000
     , #b0110000000000000
     , #b0110000000000000
     , #b0000000000000000
     ];
y := [ #b0000000000000000
     , #b0110000000000110
     , #b0110000000000110
     , #b0011000000001100
     , #b0001100000011000
     , #b0000110000110000
     , #b0000011001100000
     , #b0000001111000000
     , #b0000000110000000
     , #b0000000110000000
     , #b0000000110000000
     , #b0000000110000000
     , #b0000000110000000
     , #b0000000110000000
     , #b0000000110000000
     , #b0000000000000000
     ];
b := [ #b0000000000000000
     , #b0111111110000000
     , #b0110000001100000
     , #b0110000000110000
     , #b0110000000011100
     , #b0110000000011100
     , #b0110000000110000
     , #b0111111111100000
     , #b0111111111100000
     , #b0110000000110000
     , #b0110000000011100
     , #b0110000000011100
     , #b0110000000110000
     , #b0110000001100000
     , #b0111111110000000
     , #b0000000000000000
     ];
i := [ #b0000000000000000
     , #b0011111111111100
     , #b0011111111111100
     , #b0000000110000000
     , #b0000000110000000
     , #b0000000110000000
     , #b0000000110000000
     , #b0000000110000000
     , #b0000000110000000
     , #b0000000110000000
     , #b0000000110000000
     , #b0000000110000000
     , #b0000000110000000
     , #b0011111111111100
     , #b0011111111111100
     , #b0000000000000000
     ];
clear := [ #b0000000000000000
      , #b0000000000000000
      , #b0000000000000000
      , #b0000000000000000
      , #b0000000000000000
      , #b0000000000000000
      , #b0000000000000000
      , #b0000000000000000
      , #b0000000000000000
      , #b0000000000000000
      , #b0000000000000000
      , #b0000000000000000
      , #b0000000000000000
      , #b0000000000000000
      , #b0000000000000000
      , #b0000000000000000
      ];

r := [ #b0000000000000000
      , #b0011111111100000
      , #b0011000000011000
      , #b0011000000011000
      , #b0011000000001100
      , #b0011000000011000
      , #b0011000000110000
      , #b0011000001100000
      , #b0011111111000000
      , #b0011000001100000
      , #b0011000000110000
      , #b0011000000011000
      , #b0011000000001100
      , #b0011000000001100
      , #b0011000000001100
      , #b0000000000000000
      ];
d := [ #b0000000000000000
     , #b0011111111100000
     , #b0011000000110000
     , #b0011000000011000
     , #b0011000000001100
     , #b0011000000000110
     , #b0011000000000110
     , #b0011000000000110
     , #b0011000000000110
     , #b0011000000000110
     , #b0011000000000110
     , #b0011000000001100
     , #b0011000000011000
     , #b0011000000110000
     , #b0011111111100000
     , #b0000000000000000
     ];

  t := [ #b0000000000000000
       , #b0011111111111100
       , #b0011111111111100
       , #b0000000110000000
       , #b0000000110000000
       , #b0000000110000000
       , #b0000000110000000
       , #b0000000110000000
       , #b0000000110000000
       , #b0000000110000000
       , #b0000000110000000
       , #b0000000110000000
       , #b0000000110000000
       , #b0000000110000000
       , #b0000000110000000
       , #b0000000000000000
       ];

  while true do
  {
      copyImage(s);
      delay();
      copyImage(clear);
      delay();
      copyImage(h);
      delay();
      copyImage(clear);
      delay();
      copyImage(a);
      delay();
      copyImage(clear);
      delay();
      copyImage(p);
      delay();
      copyImage(clear);
      delay();
      copyImage(p);
      delay();
      copyImage(clear);
      delay();
      copyImage(y);
      delay();
      copyImage(clear);
      delay();
      copyImage(b);
      delay();
      copyImage(clear);
      delay();
      copyImage(i);
      delay();
      copyImage(clear);
      delay();
      copyImage(r);
      delay();
      copyImage(clear);
      delay();
      copyImage(t);
      delay();
      copyImage(clear);
      delay();
      copyImage(h);
      delay();
      copyImage(clear);
      delay();
      copyImage(d);
      delay();
      copyImage(clear);
      delay();
      copyImage(a);
      delay();
      copyImage(clear);
      delay();
      copyImage(y);
      delay();
      copyImage(clear);
      delay();
      copyImage(ex);
      delay();
      copyImage(clear);
      delay()
  }
}

proc copyImage(array s) is
  var n;
{ n := 0;
  while n < 16 do
  { framebuff[15-n] := s[n];
    n := n + 1
  }
}

proc delay() is
  var n;
{ n := 0;
  while n < 100 do n := n + 1
}
